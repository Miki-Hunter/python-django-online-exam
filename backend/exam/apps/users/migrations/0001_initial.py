# Generated by Django 3.2.6 on 2021-08-24 18:54

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='TblAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='前端操作的名字', max_length=64, unique=True, verbose_name='前端操作的名字')),
                ('description', models.CharField(blank=True, help_text='页面操作的描述', max_length=128, null=True, verbose_name='页面操作的描述')),
                ('default_check', models.SmallIntegerField(default=0, help_text='当前操作是否需要校验,true为1,0为false', verbose_name='当前操作是否需要校验,true为1,0为false')),
            ],
            options={
                'db_table': 'action',
            },
        ),
        migrations.CreateModel(
            name='TblPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='页面的名称,要唯一', max_length=64, unique=True, verbose_name='页面的名称,要唯一')),
                ('description', models.CharField(blank=True, help_text='页面的功能性描述', max_length=128, null=True, verbose_name='页面的功能性描述')),
                ('action_ids', models.CharField(blank=True, help_text='页面对应的操作权限列表，用-连接action的id', max_length=128, null=True, verbose_name='页面对应的操作权限列表，用-连接action的id')),
            ],
            options={
                'db_table': 'page',
            },
        ),
        migrations.CreateModel(
            name='TblRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='昵称', max_length=64, verbose_name='昵称')),
                ('description', models.CharField(blank=True, help_text='描述', max_length=256, null=True, verbose_name='描述')),
                ('detail', models.CharField(blank=True, help_text='详细功能', max_length=64, null=True, verbose_name='详细功能')),
                ('page_ids', models.CharField(blank=True, help_text='当前角色所能访问的页面的id集合', max_length=64, null=True, verbose_name='当前角色所能访问的页面的id集合')),
            ],
            options={
                'db_table': 'role',
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.CharField(default=uuid.uuid4, max_length=40, primary_key=True, serialize=False)),
                ('nickname', models.CharField(help_text='昵称', max_length=64, verbose_name='昵称')),
                ('role_id', models.IntegerField(help_text='用户ID', verbose_name='用户ID')),
                ('avatar', models.CharField(blank=True, help_text='头像', max_length=256, null=True, verbose_name='头像')),
                ('description', models.CharField(blank=True, help_text='头像', max_length=256, null=True, verbose_name='头像')),
                ('telephone', models.CharField(blank=True, help_text='手机号码', max_length=11, null=True, verbose_name='手机号码')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='创建时间', verbose_name='创建时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
